(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{164:function(t,e,a){"use strict";a.r(e);var n=a(0),s=Object(n.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",[t._v("Introduction")]),t._v(" "),a("p",[t._v("The ISE (Ion Specific Electrode) Probe Interface can be used to read any probe that outputs a voltage in the range of -1024 mV to 1024 mV. pH and ORP are supported with specific libraries, but it is very easy to use another mV based probe by extending the library.")]),t._v(" "),t._m(0),t._v(" "),t._m(1),t._v(" "),a("h1",[t._v("Connections")]),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("Connection to the device is as follows:")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),a("p",[t._v("The temperature probe comes with a 3-wire header; any 3-wire DS18B20 will work. The VCC pin is labeled with a triangle:")]),t._v(" "),t._m(5),t._v(" "),a("p",[t._v("A standalone DS18B20 can be directly connected to the board, no resistor is required.")]),t._v(" "),t._m(6),t._v(" "),a("p",[t._v("Each device comes with 4.7k resistor pullups on the I2C bus. They pass through a 3-pad solder paste jumper. The outer pads are connected to the middle by thin traces. To disable the pullups, use a utility knife to cut both traces. To re-enable the pullups, connect all three pads together with solder.")]),t._v(" "),a("h1",[t._v("Getting Started")]),t._v(" "),a("p",[t._v("To start developing with the device, you need to install a library.")]),t._v(" "),a("ul",[t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),a("li",[a("p",[a("strong",[t._v("MicroPython")]),t._v(": clone the "),a("a",{attrs:{href:"https://github.com/u-fire/ISE_Probe",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub repo"),a("OutboundLink")],1),t._v(". In the python/MicroPython directory, you will find the files for various boards and their accompanying README files with instructions.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Raspberry Pi")]),t._v(":  clone the "),a("a",{attrs:{href:"https://github.com/u-fire/ISE_Probe",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub repo"),a("OutboundLink")],1),t._v(". In the python/RaspberryPi directory, you will find the files for various boards and their accompanying README files with instructions. Be sure to read the section below for instructions.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Rust")]),t._v(": Download/install/documentation for the "),a("a",{attrs:{href:"https://crates.io/crates/ufire_ise",target:"_blank",rel:"noopener noreferrer"}},[t._v("crate"),a("OutboundLink")],1)])])]),t._v(" "),t._m(10),t._v(" "),a("p",[t._v("Before you can run anything, you will need to enable software I2C; the Pi's hardware implementation has a clock-stretching bug that will prevent it from working with the probe (or any other device that uses clock-stretching).")]),t._v(" "),a("div",{pre:!0},[a("ol",[t._m(11),t._v(" "),a("li",[a("p",[t._v("Add\n"),a("code",[t._v("dtoverlay=i2c-gpio,i2c_gpio_sda=<pin>,i2c_gpio_scl=<pin>")]),t._v("\nreplacing "),a("code",[t._v("<pin>")]),t._v(" with whatever pin you'd like to use. Refer "),a("a",{attrs:{href:"https://docs.microsoft.com/en-us/windows/iot-core/media/pinmappingsrpi/rp2_pinout.png",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(" for the pin functions, you will need to use the orange GPIO xx labels in the picture to locate the pins.")])]),t._v(" "),t._m(12),t._v(" "),t._m(13)])]),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),a("h1",[t._v("Calibration")]),t._v(" "),a("p",[t._v("There are two calibration options, single point and dual point. Single point calibration is a simple offset to the measured value. It is best suited for a sensor that displays linear measurements in the range of interest. Dual point calibration is used when the probe results are not linear over the entire range. Two points are selected, the high and low end of expected measurements.")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._m(20),t._m(21),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),a("p",[t._v("Alternatively, you can use dual point calibration between two predesignated points. Two calibration solutions are required, the low and high values in mV you expect to measure between.")]),t._v(" "),t._m(25),t._m(26),t._m(27),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._m(31),t._m(32),a("h1",[t._v("Use")]),t._v(" "),t._m(33),t._v(" "),t._m(34),t._m(35),t._m(36),t._m(37),t._v(" "),t._m(38),t._v(" "),a("p",[t._v("A mV measurement takes 500 ms. A temperature measurement takes 750ms.")]),t._v(" "),t._m(39),t._v(" "),a("p",[t._v("Probes require regular care. There is a fluid junction that makes an electrical connection with the solution to be measured. If a probe is left continuously submerged, the junction could potentially leak the buffer fluid from inside the probe. The concentration of sodium chloride could change over time, slowly decreasing accuracy. This can be compensated for by recalibrating the probe, but eventually, the probe will no longer be serviceable.")]),t._v(" "),a("p",[t._v("The junction can become clogged by debris or buildup. To clear a clogged junction, soak the probe in a 1:1 bleach solution. You can also use vinegar to help remove deposits on the probe.")]),t._v(" "),t._m(40),t._v(" "),a("p",[t._v("Using any water quality measuring probe with another probe will likely cause interference. There are many factors that determine the amount to include the grounding of the solution, the type of probes, the solution itself, chemical reactions that may take place, etc. The only way to ensure interference doesn't cause faulty measurements is to isolate the circuit.")]),t._v(" "),a("p",[t._v("Each probe would need to be isolated from each other using either a galvanic isolation circuit, or connected to separated battery powered devices, transmitting information via "),a("a",{attrs:{href:"https://github.com/u-fire/uFire_BLE",target:"_blank",rel:"noopener noreferrer"}},[t._v("bluetooth"),a("OutboundLink")],1),t._v(" or "),a("a",{attrs:{href:"https://github.com/u-fire/uFire_WS",target:"_blank",rel:"noopener noreferrer"}},[t._v("WiFi"),a("OutboundLink")],1),t._v(", for example.")]),t._v(" "),a("h1",[t._v("More Help")]),t._v(" "),a("p",[t._v("If you have any questions, find a bug, or have any suggestions on improvements, go to this project's "),a("a",{attrs:{href:"https://github.com/u-fire/ISE_Probe",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),a("OutboundLink")],1),t._v(" page and submit an Issue or Pull Request. Or you can send an email to "),a("a",{attrs:{href:"mailto:questions@ufire.co"}},[t._v("questions@ufire.co")]),t._v(".")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"characteristics"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#characteristics","aria-hidden":"true"}},[this._v("#")]),this._v(" Characteristics")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ul",[a("li",[a("strong",[t._v("mV Measurement range")]),t._v(": -1024 mV to 1024 mV")]),t._v(" "),a("li",[a("strong",[t._v("mV Accuracy")]),t._v(": ± 1 mV")]),t._v(" "),a("li",[a("strong",[t._v("Temperature range")]),t._v(": -2 to 35 C")]),t._v(" "),a("li",[a("strong",[t._v("Temperature Precision")]),t._v(": 0.05 C")]),t._v(" "),a("li",[a("strong",[t._v("Interface")]),t._v(": I2C")]),t._v(" "),a("li",[a("strong",[t._v("Current use")]),t._v(": ~10mA peak, low idle current ~1mA")]),t._v(" "),a("li",[a("strong",[t._v("Supply voltage range")]),t._v(": 3.3 to 5.5V")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"i2c-connections"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i2c-connections","aria-hidden":"true"}},[this._v("#")]),this._v(" I2C Connections")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"table"},[a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("ISE Probe Interface")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Master device")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("GND")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("GND")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("SCL")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("SCL")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("SDA")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("SDA")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("3.3/5v")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("3.3 - 5V")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"temperature-sensor-connections"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#temperature-sensor-connections","aria-hidden":"true"}},[this._v("#")]),this._v(" Temperature Sensor Connections")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"table"},[a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("ISE Probe Interface")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Temperature Probe")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("▲ (VCC)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("▲")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("(Data)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(pin 2)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("(GND)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("(pin 3)")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"i2c-bus-pull-ups"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i2c-bus-pull-ups","aria-hidden":"true"}},[this._v("#")]),this._v(" I2C Bus Pull-ups")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("strong",[this._v("Arduino IDE")]),this._v(":  go to the library manager (Sketch / Include Library / Manage Libraries...) and search for ISE Probe.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("strong",[this._v("PlatformIO")]),this._v(": install the library using the library manager (PlatformIO / PlatformIO Home / Libraries), search for ISE Probe.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("strong",[this._v("Particle.io")]),this._v(": search for ISE_Probe_Interface in the Libraries section of the IDE.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"raspberry-pi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#raspberry-pi","aria-hidden":"true"}},[this._v("#")]),this._v(" Raspberry Pi")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("code",[this._v("sudo nano /boot/config.txt")]),this._v(" and scroll to the bottom")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("code",[this._v("ctrl + x")]),this._v(" to exit, "),e("code",[this._v("y")]),this._v(" to save, and "),e("code",[this._v("enter")]),this._v(" to confirm the filename.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("Reboot")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"the-shell-example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-shell-example","aria-hidden":"true"}},[this._v("#")]),this._v(" The "),e("code",[this._v("shell")]),this._v(" Example")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{pre:!0},[e("p",[this._v("An interactive shell interface is provided and is a quick and easy way to get started using the device. You will find the equivalent commands in the code area to the right when applicable. Upload it to your master device and start a serial terminal. You will be presented with a "),e("code",[this._v(">")]),this._v(" prompt where you can enter commands and receive a response, similar to a shell command line or REPL. It is often quicker to experiment this way rather than rewriting, compiling, and uploading new versions every time.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"changing-the-i2c-address"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#changing-the-i2c-address","aria-hidden":"true"}},[this._v("#")]),this._v(" Changing the I2C Address")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{pre:!0},[e("p",[this._v("If needed, the I2C address can be changed by calling "),e("code",[this._v("setI2CAddress()")]),this._v(". The device will permanently change it's address and continue to use it after a power reset. If you forget the new address, you will need to use an I2C bus scanner to locate it again.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"single-point"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#single-point","aria-hidden":"true"}},[this._v("#")]),this._v(" Single Point")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("ISE_Probe ISE"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nISE"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("calibrateSingle")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("20")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// the low measurement being 20 mV")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" iseprobe "),a("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" iseprobe\n\nISE "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" iseprobe"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nISE"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("calibrateSingle"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("20")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("# the low measurement being 20 mV")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("  cal 7.0\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{pre:!0},[e("p",[this._v("Single point calibration is done in the mV unit. To begin a single point calibration, submerge the probe and wait for the readings to stabilize. Then call "),e("code",[this._v("calibrateSingle")]),this._v(" and pass the value the probe should be reading in mV. After calling it, the results are saved in the device's EEPROM and used automatically.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{pre:!0},[e("p",[this._v("As an example, if an ORP probe is reading 560 mV in a 600 mV solution, call "),e("code",[this._v("calibrateSingle(600)")]),this._v(".")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"dual-point"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dual-point","aria-hidden":"true"}},[this._v("#")]),this._v(" Dual Point")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("ISE"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("calibrateProbeLow")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// after measurement, clean probe and place in high solution")]),t._v("\nISE"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("calibrateProbeHigh")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("140")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nISE"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("useDualPoint")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("ISE"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("calibrateProbeLow"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("# after measurement, clean probe and place in high solution")]),t._v("\nISE"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("calibrateProbeHigh"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("140")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nISE"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("useDualPoint"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("True")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("  low 0\n  high 140\n  dp 1\n")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{pre:!0},[a("ol",[a("li",[t._v("Determine the lowest and highest measurement you expect. For example, the lowest level you might measure would be 0 mV and the highest might be 140 mV. These points will be referred to as\n"),a("code",[t._v("referenceLow")]),t._v(" and "),a("code",[t._v("referenceHigh")])]),t._v(" "),a("li",[t._v("Put the probe in a calibration solution at "),a("code",[t._v("referenceLow")]),t._v(" and wait for readings to stabilize, call\n"),a("code",[t._v("calibrateProbeLow(0)")]),t._v(". Do the same for referenceHigh by calling "),a("code",[t._v("calibrateProbeHigh(140)")]),t._v(".")]),t._v(" "),a("li",[t._v("By default, the device does not use dual points. A call to "),a("code",[t._v("useDualPoint()")]),t._v(" must be made to enable it. Once set, it will continue to use it automatically.")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{pre:!0},[e("p",[this._v("You can also set all four values directly using "),e("code",[this._v("setDualPointCalibration()")]),this._v(".")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("ISE"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("useDualPoint")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[this._v("ISE"),e("span",{attrs:{class:"token punctuation"}},[this._v(".")]),this._v("useDualPoint"),e("span",{attrs:{class:"token punctuation"}},[this._v("(")]),e("span",{attrs:{class:"token boolean"}},[this._v("False")]),e("span",{attrs:{class:"token punctuation"}},[this._v(")")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("  dp 1\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"temperature-compensation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#temperature-compensation","aria-hidden":"true"}},[this._v("#")]),this._v(" Temperature Compensation")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("ISE"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("useTempCompensation")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[this._v("ISE"),e("span",{attrs:{class:"token punctuation"}},[this._v(".")]),this._v("useTempCompensation"),e("span",{attrs:{class:"token punctuation"}},[this._v("(")]),e("span",{attrs:{class:"token boolean"}},[this._v("True")]),e("span",{attrs:{class:"token punctuation"}},[this._v(")")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("  tc 1\n  tc 0\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{pre:!0},[e("p",[this._v("Temperature compensation can be used to adjust for the temperature effect on the probe. The device itself doesn't contain any firmware that adjusts the readings, that is left to be implemented by the probe-specific libraries. However, this is a saved setting on the device. The pH library checks this value and if "),e("code",[this._v("true")]),this._v(", will take a temperature reading and adjust the measured pH accordingly.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"measurement-time"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#measurement-time","aria-hidden":"true"}},[this._v("#")]),this._v(" Measurement Time")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"probe-maintenance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#probe-maintenance","aria-hidden":"true"}},[this._v("#")]),this._v(" Probe Maintenance")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"isolation-and-interference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isolation-and-interference","aria-hidden":"true"}},[this._v("#")]),this._v(" Isolation and Interference")])}],!1,null,null,null);e.default=s.exports}}]);