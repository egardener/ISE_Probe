(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{167:function(a,t,s){"use strict";s.r(t);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"content"},[s("h1",[a._v("Class Members")]),a._v(" "),s("h3",{attrs:{id:"public-float-tempc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#public-float-tempc","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("public float tempC")])]),a._v(" "),s("p",[a._v("Temperature in C")]),a._v(" "),s("h3",{attrs:{id:"public-float-tempf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#public-float-tempf","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("public float tempF")])]),a._v(" "),s("p",[a._v("Temperature in F")]),a._v(" "),s("h3",{attrs:{id:"public-long-mv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#public-long-mv","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("public long mV")])]),a._v(" "),s("p",[a._v("Milli-volts from the probe")]),a._v(" "),s("h1",[a._v("Class Functions")]),a._v(" "),s("h2",{attrs:{id:"float-measuremv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#float-measuremv","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("float measuremV()")])]),a._v(" "),s("p",[a._v("Starts a mV measurement.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("measuremV")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("measuremV"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mv\n")])])]),s("h3",{attrs:{id:"returns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns")]),a._v(" "),s("p",[a._v("the measured result in mV, -1 on error")]),a._v(" "),s("h2",{attrs:{id:"float-measuretemp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#float-measuretemp","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("float measureTemp()")])]),a._v(" "),s("p",[a._v("Starts a temperature measurement.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("measureTemp")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("measureTemp"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("temp\n")])])]),s("p",[a._v("tempC and tempF are updated")]),a._v(" "),s("p",[a._v("A value of -127 means the temperature sensor is not connected.")]),a._v(" "),s("h3",{attrs:{id:"returns-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns")]),a._v(" "),s("p",[a._v("temperature in C")]),a._v(" "),s("h2",{attrs:{id:"void-calibratesingle-float-solutionmv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#void-calibratesingle-float-solutionmv","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("void calibrateSingle(float solutionmV)")])]),a._v(" "),s("p",[a._v("Calibrates the probe using a single point using a mV value.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("calibrateSingle")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token number"}},[a._v("200")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("calibrateSingle"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token number"}},[a._v("200")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("cal 200\n")])])]),s("p",[a._v("The result will be saved in the device's EEPROM and used automatically. It takes 4.5 seconds to complete.")]),a._v(" "),s("h2",{attrs:{id:"void-calibrateprobelow-float-solutionmv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#void-calibrateprobelow-float-solutionmv","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("void calibrateProbeLow(float solutionmV)")])]),a._v(" "),s("p",[a._v("Calibrates the dual-point values for the low reading, in mV, and saves them in the devices's EEPROM. It takes 4.5 seconds to complete.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("calibrateProbeLow")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token number"}},[a._v("0")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("calibrateProbeLow"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token number"}},[a._v("0")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("low 0\n")])])]),s("h3",{attrs:{id:"parameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters","aria-hidden":"true"}},[a._v("#")]),a._v(" Parameters")]),a._v(" "),s("div",{pre:!0},[s("ul",[s("li",[s("code",[a._v("solutionmV")]),a._v(" the mV of the calibration solution")])])]),a._v(" "),s("h2",{attrs:{id:"void-calibrateprobehigh-float-solutionmv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#void-calibrateprobehigh-float-solutionmv","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("void calibrateProbeHigh(float solutionmV)")])]),a._v(" "),s("p",[a._v("Calibrates the dual-point values for the high reading, in mV, and saves them in the devices's EEPROM. It takes 4.5 seconds to complete.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("calibrateProbeHigh")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token number"}},[a._v("200")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("calibrateProbeHigh"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token number"}},[a._v("200")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("high 200\n")])])]),s("h3",{attrs:{id:"parameters-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Parameters")]),a._v(" "),s("div",{pre:!0},[s("ul",[s("li",[s("code",[a._v("solutionmV")]),a._v(" the mV of the calibration solution")])])]),a._v(" "),s("h2",{attrs:{id:"void-setdualpointcalibration-float-reflow-float-refhigh-float-readlow-float-readhigh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#void-setdualpointcalibration-float-reflow-float-refhigh-float-readlow-float-readhigh","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("void setDualPointCalibration(float refLow,float refHigh,float readLow,float readHigh)")])]),a._v(" "),s("p",[a._v("Sets all the values, in mV, for dual point calibration and saves them in the devices's EEPROM.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("setDualPointCalibration")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token number"}},[a._v("0")]),s("span",{attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{attrs:{class:"token number"}},[a._v("200")]),s("span",{attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{attrs:{class:"token number"}},[a._v("3")]),s("span",{attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{attrs:{class:"token number"}},[a._v("230")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("setDualPointCalibration"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token number"}},[a._v("0")]),s("span",{attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{attrs:{class:"token number"}},[a._v("200")]),s("span",{attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{attrs:{class:"token number"}},[a._v("3")]),s("span",{attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{attrs:{class:"token number"}},[a._v("230")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h3",{attrs:{id:"parameters-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters-3","aria-hidden":"true"}},[a._v("#")]),a._v(" Parameters")]),a._v(" "),s("div",{pre:!0},[s("ul",[s("li",[s("p",[s("code",[a._v("refLow")]),a._v(" the reference low point")])]),a._v(" "),s("li",[s("p",[s("code",[a._v("refHigh")]),a._v(" the reference high point")])]),a._v(" "),s("li",[s("p",[s("code",[a._v("readLow")]),a._v(" the measured low point")])]),a._v(" "),s("li",[s("p",[s("code",[a._v("readHigh")]),a._v(" the measured high point")])])])]),a._v(" "),s("h2",{attrs:{id:"float-getcalibrateoffset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#float-getcalibrateoffset","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("float getCalibrateOffset()")])]),a._v(" "),s("p",[a._v("Returns the single-point offset from the device.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[a._v("float")]),a._v(" offset "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("getCalibrateOffset")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("offset "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("getCalibrateOffset"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("cal\n")])])]),s("h3",{attrs:{id:"returns-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns-3","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns")]),a._v(" "),s("p",[a._v("the probe's offset")]),a._v(" "),s("h2",{attrs:{id:"void-usetemperaturecompensation-bool-b"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#void-usetemperaturecompensation-bool-b","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("void useTemperatureCompensation(bool b)")])]),a._v(" "),s("p",[a._v("Configures the device to use temperature compensation.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("useTemperatureCompensation")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token boolean"}},[a._v("true")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("useTemperatureCompensation"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token boolean"}},[a._v("True")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("tc 1\n")])])]),s("h3",{attrs:{id:"parameters-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters-4","aria-hidden":"true"}},[a._v("#")]),a._v(" Parameters")]),a._v(" "),s("div",{pre:!0},[s("ul",[s("li",[s("code",[a._v("b")]),a._v(" true for false")])])]),a._v(" "),s("h2",{attrs:{id:"bool-usingtemperaturecompensation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bool-usingtemperaturecompensation","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("bool usingTemperatureCompensation()")])]),a._v(" "),s("p",[a._v("Determines if temperature compensation is being used.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[a._v("bool")]),a._v(" usingTemp "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("usingTemperatureCompensation")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("usingTemp "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("usingTemperatureCompensation"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("tc\n")])])]),s("h3",{attrs:{id:"returns-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns-4","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns")]),a._v(" "),s("p",[a._v("true if using compensation, false otherwise")]),a._v(" "),s("h2",{attrs:{id:"void-useaveraging-bool-b"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#void-useaveraging-bool-b","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("void useAveraging(bool b)")])]),a._v(" "),s("p",[a._v("Configures device to use averaging.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("useAveraging")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token boolean"}},[a._v("true")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("useAveraging"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token boolean"}},[a._v("True")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h3",{attrs:{id:"parameters-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters-5","aria-hidden":"true"}},[a._v("#")]),a._v(" Parameters")]),a._v(" "),s("div",{pre:!0},[s("ul",[s("li",[s("code",[a._v("b")]),a._v(" true or false")])])]),a._v(" "),s("h2",{attrs:{id:"void-usedualpoint-bool-b"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#void-usedualpoint-bool-b","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("void useDualPoint(bool b)")])]),a._v(" "),s("p",[a._v("Configures device to use dual-point calibration.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("useDualPoint")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token boolean"}},[a._v("true")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("useDualPoint"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token boolean"}},[a._v("True")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n```shell\ndp "),s("span",{attrs:{class:"token number"}},[a._v("1")]),a._v("\n")])])]),s("h3",{attrs:{id:"parameters-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parameters-6","aria-hidden":"true"}},[a._v("#")]),a._v(" Parameters")]),a._v(" "),s("div",{pre:!0},[s("ul",[s("li",[s("code",[a._v("b")]),a._v(" true or false")])])]),a._v(" "),s("h2",{attrs:{id:"bool-usingdualpoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bool-usingdualpoint","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("bool usingDualPoint()")])]),a._v(" "),s("p",[a._v("Determines if dual point calibration is being used.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[a._v("bool")]),a._v(" usingTemp "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("usingDualPoint")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("usingTemp "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("usingDualPoint"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("dp\n")])])]),s("h3",{attrs:{id:"returns-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns-5","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns")]),a._v(" "),s("p",[a._v("true if using compensation, false otherwise")]),a._v(" "),s("h2",{attrs:{id:"float-getcalibratehighreference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#float-getcalibratehighreference","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("float getCalibrateHighReference()")])]),a._v(" "),s("p",[a._v("Returns the dual-point calibration high reference value.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[a._v("float")]),a._v(" calHigh "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("getCalibrateHighReference")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("calHigh "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("getCalibrateHighReference"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("high\n")])])]),s("h3",{attrs:{id:"returns-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns-6","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns")]),a._v(" "),s("p",[a._v("the dual-point calibration high reference value")]),a._v(" "),s("h2",{attrs:{id:"float-getcalibratelowreference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#float-getcalibratelowreference","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("float getCalibrateLowReference()")])]),a._v(" "),s("p",[a._v("Returns the dual-point calibration low reference value.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[a._v("float")]),a._v(" calLow "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("getCalibrateLowReference")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("calLow "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("getCalibrateLowReference"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[a._v("low\n")])])]),s("h3",{attrs:{id:"returns-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns-7","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns")]),a._v(" "),s("p",[a._v("the dual-point calibration low reference value")]),a._v(" "),s("h2",{attrs:{id:"uint8-t-getversion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uint8-t-getversion","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("uint8_t getVersion()")])]),a._v(" "),s("p",[a._v("Returns the firmware version of the device.")]),a._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[a._v("uint8_t")]),a._v(" version "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" ISE_Probe"),s("span",{attrs:{class:"token operator"}},[a._v("::")]),s("span",{attrs:{class:"token function"}},[a._v("getVersion")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("version "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" ISE"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("getVersion"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("version\n")])])]),s("h3",{attrs:{id:"returns-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#returns-8","aria-hidden":"true"}},[a._v("#")]),a._v(" Returns")]),a._v(" "),s("p",[a._v("version of firmware")]),a._v(" "),s("h2",{attrs:{id:"void-reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#void-reset","aria-hidden":"true"}},[a._v("#")]),a._v(" "),s("code",[a._v("void reset()")])]),a._v(" "),s("p",[a._v("Resets all the stored calibration information.")])])}],!1,null,null,null);t.default=n.exports}}]);