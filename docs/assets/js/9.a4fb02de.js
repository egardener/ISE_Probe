(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{166:function(t,a,e){"use strict";e.r(a);var s=e(0),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",[t._v("ORP Measurement")]),t._v(" "),e("div",{pre:!0},[e("p",[t._v("The ISE Probe Interface can measure ORP with an ORP probe attached. Including "),e("code",[t._v('#include "ISE_ORP.h"')]),t._v(" will give access to all of the previously described API functions, in addition to "),e("code",[t._v("measureORP()")]),t._v(". Additionally, Eh is calculated; two methods are included for Eh, "),e("code",[t._v("setProbePotential()")]),t._v(" and "),e("code",[t._v("getProbePotential()")]),t._v(".")])]),t._v(" "),e("h2",{attrs:{id:"float-measureorp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#float-measureorp","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("code",[t._v("float measureORP()")])]),t._v(" "),e("p",[t._v("Starts an ORP measurement. ISE_ORP::ORP and ISE_ORP::Eh are updated.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("ISE_ORP"),e("span",{attrs:{class:"token operator"}},[t._v("::")]),e("span",{attrs:{class:"token function"}},[t._v("measureORP")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("ORP"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("measureORP"),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"returns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns")]),t._v(" "),e("p",[t._v("the measured result in mV, or -1 on error")]),t._v(" "),e("h2",{attrs:{id:"void-setprobepotential-uint32-t-probepotential"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#void-setprobepotential-uint32-t-probepotential","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("code",[t._v("void setProbePotential(uint32_t probePotential)")])]),t._v(" "),e("div",{pre:!0},[e("p",[t._v("Saves the connected probe's potential in EEPROM so that Eh can be calculated. After setting this value, the class member ISE_ORP::Eh is automatically updated with each call to "),e("code",[t._v("measureORP()")]),t._v(".")])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("ISE_ORP"),e("span",{attrs:{class:"token operator"}},[t._v("::")]),e("span",{attrs:{class:"token function"}},[t._v("setProbePotential")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token number"}},[t._v("195")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("ORP"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setProbePotential"),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token number"}},[t._v("195")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"uint32-t-getprobepotential"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uint32-t-getprobepotential","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("code",[t._v("uint32_t getProbePotential()")])]),t._v(" "),e("p",[t._v("Returns the saved probe potential from EEPROM.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("ISE_ORP"),e("span",{attrs:{class:"token operator"}},[t._v("::")]),e("span",{attrs:{class:"token function"}},[t._v("getProbePotential")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("ORP"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getProbePotential"),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"returns-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#returns-2","aria-hidden":"true"}},[t._v("#")]),t._v(" Returns")]),t._v(" "),e("p",[t._v("the probe potential")])])}],!1,null,null,null);a.default=n.exports}}]);